{"version":3,"sources":["actions/index.js","reducers/index.js","reducers/webs.js","reducers/global.js","store/index.js","ExpansionPanels.js","AppBar.js","selectors/index.js","App.js","serviceWorker.js","index.js"],"names":["SET_WEBS_DATA","SET_FETCHING_STATE","SET_SEARCH","setIsFetchingState","type","setWebsData","webs","setSearch","e","payload","target","value","fetchWebs","dispatch","fetch","then","data","json","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","global","isFetching","search","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ControlledExpansionPanels","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","panel","event","expanded","setState","handleRequestClose","open","seccionPrev","errorMessage","_this2","_this$props","searchWord","websLength","classes","react_default","a","createElement","Snackbar_default","ContentProps","root","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","style","display","alignItems","Error_default","toUpperCase","onRequestClose","className","map","index","key","tipo","ExpansionPanel_default","onChange","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","width","Avatar_default","height","borderRadius","marginRight","src","icono","url","Typography_default","nombre","idioma","ExpansionPanelDetails_default","descripcion","href","class","React","Component","withStyles","backgroundColor","theme","grow","flexGrow","title","defineProperty","breakpoints","up","position","shape","fade","palette","common","white","&:hover","marginLeft","spacing","unit","searchIcon","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","AppBar_default","Toolbar_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","onchange","getWebsFilter","createSelector","regex","RegExp","newWebs","filter","web","match","App","body","busqueda","ExpansionPanels","LinearProgress_default","src_AppBar","connect","bindActionCreators","actions","Boolean","location","hostname","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e59a3eec.chunk.js","sourcesContent":["export const SET_WEBS_DATA = \"SET_WEBS_DATA\";\r\nexport const SET_FETCHING_STATE = \"SET_FETCHING_STATE\";\r\nexport const SET_SEARCH = \"SET_SEARCH\";\r\n\r\nconst API_URL =\r\n    \"https://gist.githubusercontent.com/carmona44/7265da7c5a2e0e53e8e8557f22e1e870/raw/2afd060540b5e14ef43ce37c8659ecb3505aed7b/webs.json\";\r\n\r\nexport const setIsFetchingState = () => ({ type: SET_FETCHING_STATE });\r\nexport const setWebsData = (webs) => ({type: SET_WEBS_DATA, webs});\r\nexport const setSearch = (e) => ({type: SET_SEARCH, payload: e.target.value});\r\n\r\nexport const fetchWebs = () => {\r\n    return dispatch => {\r\n        dispatch(setIsFetchingState());\r\n\r\n        fetch(API_URL)\r\n            .then(data => data.json())\r\n            .then(webs => {\r\n                dispatch(setWebsData({ webs }));\r\n            })\r\n            .then(() => dispatch(setIsFetchingState()));\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { webs } from './webs';\r\nimport { global } from './global';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    webs,\r\n    global,\r\n});\r\n\r\n\r\n","import {\r\n  SET_WEBS_DATA,\r\n} from \"./../actions\";\r\n\r\n\r\nexport const webs = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_WEBS_DATA: {\r\n      return { ...state, webs: action.webs.webs.webs };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    SET_SEARCH,\r\n    SET_FETCHING_STATE,\r\n  } from \"./../actions\";\r\n  \r\n  \r\n  export const global = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case SET_FETCHING_STATE: {\r\n        return { ...state, isFetching : !state.isFetching };\r\n      }\r\n      case SET_SEARCH: {\r\n        return {...state , search: action.payload}\r\n      }\r\n\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport  reducers from './../reducers';\r\n\r\nconst initialState = {\r\n    webs: {},\r\n    global: {\r\n        isFetching: false,\r\n        search: ''\r\n    }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    reducers, \r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './ExpansionPanel.css';\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: '#d32f2f'\r\n    }\r\n};\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            seccionPrev: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    handleRequestClose = () => {\r\n        this.setState({\r\n            open: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n        const { webs, searchWord, websLength, classes } = this.props;\r\n\r\n        let errorMessage;\r\n\r\n        if (searchWord && webs.length === websLength){\r\n            errorMessage = <Snackbar\r\n                ContentProps={{\r\n                    classes: {\r\n                        root: classes.root\r\n                    }\r\n                }}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                open={!this.state.open}\r\n                autoHideDuration={3000}\r\n                message={\r\n                    <span id=\"message-id\" style={{display: 'flex', alignItems: 'center'}}>\r\n                        <ErrorIcon/>\r\n                        No se ha encontrado la web: {searchWord.toUpperCase()}\r\n                    </span>\r\n                }\r\n                onRequestClose={this.handleRequestClose}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"evita-menu\">\r\n            \r\n                {\r\n                    \r\n                    webs.map( (e, index) =>\r\n                        <div key={index}>\r\n                            {\r\n                                index > 0 ? e.tipo !== webs[index - 1].tipo ?\r\n                                    <h4 className=\"titulo-tipo\">{e.tipo.toUpperCase()}</h4> :\r\n                                    null :\r\n                                    <h4 className=\"titulo-tipo\">{e.tipo.toUpperCase()}</h4>\r\n                            }\r\n\r\n                                <ExpansionPanel className=\"espacio\" key={e.id} expanded={expanded === 'panel'+e.id} onChange={this.handleChange('panel'+e.id)}>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                         {/* Ñapa sana */}\r\n                                        <div style ={{display: \"inline-flex\" , alignItems: \"center\", width: \"100%\"}}>\r\n                                            <Avatar style={{width: 32, height: 32, borderRadius: 10, marginRight: \"10px\"}} src={e.icono.url}></Avatar>\r\n                                            <Typography>{e.nombre}</Typography>\r\n                                            <span className={e.idioma === 'ES' ? \"idiomaES\" : \"idiomaEN\"}>{e.idioma}</span>\r\n                                        </div>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails className=\"detalles\">\r\n                                        <Typography>\r\n                                            {e.descripcion}\r\n                                            <br/><br/>\r\n                                            <a href={e.url} target=\"_blank\"><i class=\"far fa-arrow-alt-circle-right\"></i> Ir a {e.nombre}</a>\r\n                                        </Typography>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    errorMessage\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing.unit,\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing.unit * 9,\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        paddingLeft: theme.spacing.unit * 10,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 120,\r\n            '&:focus': {\r\n                width: 200,\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar>\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Webs interesantes\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            onChange={props.onchange}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchAppBar);","import { createSelector } from 'reselect'\r\n\r\nconst getWebs = (state) => state.webs.webs;\r\nconst getSearchWord = (state) => state.global.search;\r\n\r\n// TODO - BUG, Cuando se busca por algo que no esta devuelve todo\r\nexport const getWebsFilter = createSelector(\r\n  [ getWebs, getSearchWord ],\r\n  (webs, search) => {\r\n    if(!webs){\r\n        return;\r\n    }\r\n\r\n    const regex = new RegExp(search, 'gi');\r\n    const newWebs = webs.filter(web => {\r\n        return web.nombre.match(regex);\r\n    });\r\n\r\n    if(newWebs){\r\n        return newWebs;\r\n    }\r\n    \r\n    return [];\r\n\r\n    \r\n  }\r\n);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './App.css';\r\nimport ControlledExpansionPanels from './ExpansionPanels';\r\nimport SearchAppBar from './AppBar';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport * as actions from \"./actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getWebsFilter } from \"./selectors/\";\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  componentWillMount(){\r\n    this.props.fetchWebs();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isFetching, webs, busqueda, searchWord} = this.props;\r\n    let body;\r\n\r\n    if (webs && webs !== 0 && !isFetching) {\r\n      body = <ControlledExpansionPanels webs={busqueda.length > 0 ? busqueda : webs} searchWord={searchWord ? searchWord : false} websLength={webs.length}/>\r\n    } else {\r\n      // TODO\r\n      body = <LinearProgress/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <SearchAppBar onchange={this.props.setSearch}/>\r\n        { body } \r\n        <footer className=\"pie-pagina\">Made on Earth by Human.</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  busqueda: getWebsFilter(state),\r\n  webs: state.webs.webs,\r\n  isFetching: state.global.isFetching,\r\n  searchWord: state.global.search\r\n});\r\n\r\nconst mapDispatchToPropsActions = dispatch => \r\n  bindActionCreators(actions, dispatch);\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPropsActions)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}