{"version":3,"sources":["actions/index.js","reducers/index.js","reducers/webs.js","reducers/global.js","store/index.js","ExpansionPanels.js","AppBar.js","selectors/index.js","App.js","serviceWorker.js","index.js"],"names":["SET_WEBS_DATA","SET_FETCHING_STATE","SET_SEARCH","setIsFetchingState","type","setWebsData","webs","setSearch","e","payload","target","value","fetchWebs","dispatch","fetch","then","data","json","combineReducers","state","action","global","isFetching","search","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ControlledExpansionPanels","React","Component","constructor","props","super","handleChange","panel","event","expanded","this","setState","handleRequestClose","open","seccionPrev","render","searchWord","websLength","classes","errorMessage","length","ContentProps","root","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","style","display","alignItems","toUpperCase","onRequestClose","className","map","index","tipo","onChange","expandIcon","width","height","borderRadius","marginRight","src","icono","url","nombre","idioma","descripcion","href","class","withStyles","backgroundColor","theme","grow","flexGrow","title","breakpoints","up","position","shape","fade","palette","common","white","marginLeft","spacing","unit","searchIcon","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","variant","noWrap","placeholder","input","onchange","getWebsFilter","createSelector","regex","RegExp","newWebs","filter","web","match","App","componentWillMount","busqueda","body","connect","bindActionCreators","actions","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee3ea3a7.chunk.js","sourcesContent":["export const SET_WEBS_DATA = \"SET_WEBS_DATA\";\nexport const SET_FETCHING_STATE = \"SET_FETCHING_STATE\";\nexport const SET_SEARCH = \"SET_SEARCH\";\n\nconst API_URL =\n    \"https://gist.githubusercontent.com/carmona44/7265da7c5a2e0e53e8e8557f22e1e870/raw/2afd060540b5e14ef43ce37c8659ecb3505aed7b/webs.json\";\n\nexport const setIsFetchingState = () => ({ type: SET_FETCHING_STATE });\nexport const setWebsData = (webs) => ({type: SET_WEBS_DATA, webs});\nexport const setSearch = (e) => ({type: SET_SEARCH, payload: e.target.value});\n\nexport const fetchWebs = () => {\n    return dispatch => {\n        dispatch(setIsFetchingState());\n\n        fetch(API_URL)\n            .then(data => data.json())\n            .then(webs => {\n                dispatch(setWebsData({ webs }));\n            })\n            .then(() => dispatch(setIsFetchingState()));\n    };\n};\n","import { combineReducers } from 'redux';\nimport { webs } from './webs';\nimport { global } from './global';\n\n\n\nexport default combineReducers({\n    webs,\n    global,\n});\n\n\n","import {\n  SET_WEBS_DATA,\n} from \"./../actions\";\n\n\nexport const webs = (state = {}, action) => {\n  switch (action.type) {\n    case SET_WEBS_DATA: {\n      return { ...state, webs: action.webs.webs.webs };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n    SET_SEARCH,\n    SET_FETCHING_STATE,\n  } from \"./../actions\";\n  \n  \n  export const global = (state = {}, action) => {\n    switch (action.type) {\n      case SET_FETCHING_STATE: {\n        return { ...state, isFetching : !state.isFetching };\n      }\n      case SET_SEARCH: {\n        return {...state , search: action.payload}\n      }\n\n      \n      default:\n        return state;\n    }\n  };\n  ","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport  reducers from './../reducers';\n\nconst initialState = {\n    webs: {},\n    global: {\n        isFetching: false,\n        search: ''\n    }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    reducers, \n    initialState,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Avatar from '@material-ui/core/Avatar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { withStyles } from '@material-ui/core/styles';\nimport './ExpansionPanel.css';\n\nconst styles = {\n    root: {\n        backgroundColor: '#d32f2f'\n    }\n};\n\nclass ControlledExpansionPanels extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            expanded: null,\n            seccionPrev: '',\n            open: false\n        }\n    }\n\n    handleChange = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    };\n\n    handleRequestClose = () => {\n        this.setState({\n            open: false,\n        });\n    };\n\n    render() {\n        const { expanded } = this.state;\n        const { webs, searchWord, websLength, classes } = this.props;\n\n        let errorMessage;\n\n        if (searchWord && webs.length === websLength){\n            errorMessage = <Snackbar\n                ContentProps={{\n                    classes: {\n                        root: classes.root\n                    }\n                }}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                open={!this.state.open}\n                autoHideDuration={3000}\n                message={\n                    <span id=\"message-id\" style={{display: 'flex', alignItems: 'center'}}>\n                        <ErrorIcon/>\n                        No se ha encontrado la web: {searchWord.toUpperCase()}\n                    </span>\n                }\n                onRequestClose={this.handleRequestClose}\n            />;\n        }\n\n        return (\n            <div className=\"evita-menu\">\n            \n                {\n                    \n                    webs.map( (e, index) =>\n                        <div key={index}>\n                            {\n                                index > 0 ? e.tipo !== webs[index - 1].tipo ?\n                                    <h4 className=\"titulo-tipo\">{e.tipo.toUpperCase()}</h4> :\n                                    null :\n                                    <h4 className=\"titulo-tipo\">{e.tipo.toUpperCase()}</h4>\n                            }\n\n                                <ExpansionPanel className=\"espacio\" key={e.id} expanded={expanded === 'panel'+e.id} onChange={this.handleChange('panel'+e.id)}>\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                         {/* Ñapa sana */}\n                                        <div style ={{display: \"inline-flex\" , alignItems: \"center\", width: \"100%\"}}>\n                                            <Avatar style={{width: 32, height: 32, borderRadius: 10, marginRight: \"10px\"}} src={e.icono.url}></Avatar>\n                                            <Typography>{e.nombre}</Typography>\n                                            <span className={e.idioma === 'ES' ? \"idiomaES\" : \"idiomaEN\"}>{e.idioma}</span>\n                                        </div>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails className=\"detalles\">\n                                        <Typography>\n                                            {e.descripcion}\n                                            <br/><br/>\n                                            <a href={e.url} target=\"_blank\"><i class=\"far fa-arrow-alt-circle-right\"></i> Ir a {e.nombre}</a>\n                                        </Typography>\n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                        </div>\n                    )\n                }\n\n                {\n                    errorMessage\n                }\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ControlledExpansionPanels);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n});\n\nfunction SearchAppBar(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <AppBar>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                        Webs interesantes\n                    </Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            onChange={props.onchange}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);","import { createSelector } from 'reselect'\n\nconst getWebs = (state) => state.webs.webs;\nconst getSearchWord = (state) => state.global.search;\n\n// TODO - BUG, Cuando se busca por algo que no esta devuelve todo\nexport const getWebsFilter = createSelector(\n  [ getWebs, getSearchWord ],\n  (webs, search) => {\n    if(!webs){\n        return;\n    }\n\n    const regex = new RegExp(search, 'gi');\n    const newWebs = webs.filter(web => {\n        return web.nombre.match(regex);\n    });\n\n    if(newWebs){\n        return newWebs;\n    }\n    \n    return [];\n\n    \n  }\n);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport ControlledExpansionPanels from './ExpansionPanels';\nimport SearchAppBar from './AppBar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport * as actions from \"./actions\";\nimport { bindActionCreators } from \"redux\";\nimport { getWebsFilter } from \"./selectors/\";\n\n\nclass App extends Component {\n  \n  componentWillMount(){\n    this.props.fetchWebs();\n  }\n\n\n\n  render() {\n    const { isFetching, webs, busqueda, searchWord} = this.props;\n    let body;\n\n    if (webs && webs !== 0 && !isFetching) {\n      body = <ControlledExpansionPanels webs={busqueda.length > 0 ? busqueda : webs} searchWord={searchWord ? searchWord : false} websLength={webs.length}/>\n    } else {\n      // TODO\n      body = <LinearProgress/>\n    }\n\n    return (\n      <div>\n        <SearchAppBar onchange={this.props.setSearch}/>\n        { body } \n        <footer className=\"pie-pagina\">Made on Earth by Human.</footer>\n        <a href=\"https://www.compragamers.com/novedades\">Compragamers novedades</a>\n        <a href=\"https://www.compragamers.com/confort/48-secretlab-titan-evo.html\">Compragamers secretlab</a>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  busqueda: getWebsFilter(state),\n  webs: state.webs.webs,\n  isFetching: state.global.isFetching,\n  searchWord: state.global.search\n});\n\nconst mapDispatchToPropsActions = dispatch => \n  bindActionCreators(actions, dispatch);\n\n\n\nexport default connect(mapStateToProps, mapDispatchToPropsActions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}